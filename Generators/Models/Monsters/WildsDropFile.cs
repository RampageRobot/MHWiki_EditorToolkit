// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MediawikiTranslator.Models.Data.MHWilds;
//
//    var wildsDropFile = WildsDropFile.FromJson(jsonString);
namespace MediawikiTranslator.Models.Monsters
{
	using Newtonsoft.Json;
	using Newtonsoft.Json.Converters;
	using System.Globalization;

	public partial class WildsDropFile
	{
		[JsonProperty("app.user_data.EnemyRewardData", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileAppUserDataEnemyRewardData AppUserDataEnemyRewardData { get; set; }
	}

	public partial class DropFileAppUserDataEnemyRewardData
	{
		[JsonProperty("_Values", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileValue[] Values { get; set; }
	}

	public partial class DropFileValue
	{
		[JsonProperty("app.user_data.EnemyRewardData.cData", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileAppUserDataEnemyRewardDataCData AppUserDataEnemyRewardDataCData { get; set; }
	}

	public partial class DropFileAppUserDataEnemyRewardDataCData
	{
		[JsonProperty("_Index", NullValueHandling = NullValueHandling.Ignore)]
		public long? Index { get; set; }

		[JsonProperty("_dataId", NullValueHandling = NullValueHandling.Ignore)]
		public long? DataId { get; set; }

		[JsonProperty("_lotType", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileLotType LotType { get; set; }

		[JsonProperty("_rewardType", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileRewardType RewardType { get; set; }

		[JsonProperty("_partsIndex", NullValueHandling = NullValueHandling.Ignore)]
		public long? PartsIndex { get; set; }

		[JsonProperty("_IdStory", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileId IdStory { get; set; }

		[JsonProperty("_RewardNumStory", NullValueHandling = NullValueHandling.Ignore)]
		public long? RewardNumStory { get; set; }

		[JsonProperty("_probabilityStory", NullValueHandling = NullValueHandling.Ignore)]
		public long? ProbabilityStory { get; set; }

		[JsonProperty("_IdEx", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileId[] IdEx { get; set; }

		[JsonProperty("_RewardNumEx", NullValueHandling = NullValueHandling.Ignore)]
		public long[] RewardNumEx { get; set; }

		[JsonProperty("_probabilityEx", NullValueHandling = NullValueHandling.Ignore)]
		public long[] ProbabilityEx { get; set; }
	}

	public partial class DropFileId
	{
		[JsonProperty("app.ItemDef.ID_Serializable", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileAppSerializable AppItemDefIdSerializable { get; set; }
	}

	public partial class DropFileAppSerializable
	{
		[JsonProperty("_Value", NullValueHandling = NullValueHandling.Ignore)]
		public string Value { get; set; }
	}

	public partial class DropFileLotType
	{
		[JsonProperty("app.RewardDef.REWARD_COMMON_LOT_TYPE_Serializable", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileAppSerializable AppRewardDefRewardCommonLotTypeSerializable { get; set; }
	}

	public partial class DropFileRewardType
	{
		[JsonProperty("app.EnemyReward.RewardType_Serializable", NullValueHandling = NullValueHandling.Ignore)]
		public DropFileAppSerializable AppEnemyRewardRewardTypeSerializable { get; set; }
	}

	public partial class WildsDropFile
	{
		public static WildsDropFile[] FromJson(string json) => JsonConvert.DeserializeObject<WildsDropFile[]>(json, DropFileConverter.Settings)!;
	}

	internal static class DropFileConverter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
